name: Build

on:
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+.*'
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+.*'

env:
  VERSION: 0.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}  # This checks out the commit that triggered the workflow run
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Set the version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Echo the version
        run: echo "Version is $VERSION"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release /p:Version=${{ env.VERSION }} /p:CopyrightYear=$(date +%Y)

      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: .

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 'latest' ]
#        version: [ 'latest', '1.0.0', '0.26.0' ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: .
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Start Database
        working-directory: Npgmq.Test
        run: scripts/start-db.sh ${{ matrix.version }}
      
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
        
      - name: Stop Database
        working-directory: Npgmq.Test
        run: scripts/stop-db.sh
  
  publish:
    needs: [build, test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: .
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Set the version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Echo the version
        run: echo "Version is $VERSION"

      - name: Pack
        run: dotnet pack Npgmq/Npgmq.csproj --no-build --configuration Release /p:PackageVersion=${{ env.VERSION }} /p:CopyrightYear=$(date +%Y) --output out

#      - name: Push
#        run: dotnet nuget push "out/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
